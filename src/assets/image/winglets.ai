import { useEffect, useState } from "react";import { Button, Grid, Typography, Menu, MenuItem } from "@mui/material";import ExpandMoreIcon from "@mui/icons-material/ExpandMore";import ExpandLessIcon from "@mui/icons-material/ExpandLess";const Horoscope = () => {  const [anchorEl, setAnchorEl] = useState(null);  const [selectedHoroscopes, setSelectedHoroscopes] = useState([]);  const [isExpanded, setIsExpanded] = useState(false);  const toggleExpansion = () => {    setIsExpanded(!isExpanded);  };  useEffect(() => {    const storedHoroscopes = JSON.parse(      localStorage.getItem("selectedHoroscope")    );    if (storedHoroscopes) {      setSelectedHoroscopes(storedHoroscopes);    }  }, []);  const handleClick = (event) => {    setAnchorEl(event.currentTarget);  };  const handleClose = () => {    setAnchorEl(null);  };  const handleHobbySelect = (hobby) => {    const newHoroscopes = [...selectedHoroscopes, hobby];    setSelectedHoroscopes(newHoroscopes); // Correct the state variable name here    localStorage.setItem("selectedHoroscope", JSON.stringify(newHoroscopes)); // Save selected hobbies to local storage    handleClose();  };  return (    <>      <Grid        container        spacing={2}        alignItems="center"        justifyContent="center"        sx={{ marginTop: "20px", textAlign: "center" }}      >        {console.log("1")}        <Grid item>          <Typography sx={{ color: "white", fontSize: "20px" }}>            Star sign          </Typography>        </Grid>        <Grid item>          <Button            onClick={toggleExpansion}            style={{ color: "white", marginLeft: "50px" }}          >            {isExpanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}          </Button>        </Grid>      </Grid>      {isExpanded && (        <div style={{ color: "white", textAlign: "center" }}>          <Button            onClick={handleClick}            variant="outlined"            sx={{              cursor: "pointer",              color: "#fff",              fontSize: "17px",              borderRadius: "1rem",              border: "1px solid #857f74",              position: "relative",              transition: "0.1s",              width: "416px",              height: "40px",              textTransform: "none",              "&:hover": {                borderColor: "white",              },              "&:active": {                transform: "scale(0.98)",              },            }}          >            {selectedHoroscopes.length > 0              ? "Selected Horoscopes"              : "Select Horoscope"}          </Button>          <Menu            anchorEl={anchorEl}            open={Boolean(anchorEl)}            onClose={handleClose}          >            <MenuItem onClick={() => handleHobbySelect("Aries")}>              Aries            </MenuItem>            <MenuItem onClick={() => handleHobbySelect("Taurus")}>              Taurus            </MenuItem>            <MenuItem onClick={() => handleHobbySelect("Gemini")}>              Gemini            </MenuItem>            <MenuItem onClick={() => handleHobbySelect("Cancer")}>              Cancer            </MenuItem>            <MenuItem onClick={() => handleHobbySelect("Leo")}>Leo</MenuItem>            <MenuItem onClick={() => handleHobbySelect("Virgo")}>              Virgo            </MenuItem>            <MenuItem onClick={() => handleHobbySelect("Libra")}>              Libra            </MenuItem>            <MenuItem onClick={() => handleHobbySelect("Scopion")}>              Scopion            </MenuItem>            <MenuItem onClick={() => handleHobbySelect("Sagittarius")}>              Sagittarius            </MenuItem>            <MenuItem onClick={() => handleHobbySelect("Capricorn")}>              Capricorn            </MenuItem>            <MenuItem onClick={() => handleHobbySelect("Aquarius")}>              Aquarius            </MenuItem>            <MenuItem onClick={() => handleHobbySelect("Pisces")}>              Pisces            </MenuItem>          </Menu>          {selectedHoroscopes.length > 0 && (            <div>              <p>Selected Hobbies:</p>              <ul>                {selectedHoroscopes.map((hobby, index) => (                  <li key={index}>{hobby}</li>                ))}              </ul>            </div>          )}        </div>      )}    </>  );};export default Horoscope;